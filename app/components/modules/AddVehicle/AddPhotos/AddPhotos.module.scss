@import '../../../../styles/abstracts/colors';
@import '../../../../styles/abstracts/breakpoints';

.container {
    width: 100%;
    margin: 0 auto;
    padding: 0;
}

.content {
    width: 100%;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    
    @include respond-up(md) {
        gap: 2rem;
    }
}

.instructions {
    text-align: left;
    max-width: 600px;
    width: 100%;
    margin-left: auto;
    margin-right: auto;
}

.tip {
    background: rgba($secondary, 0.15);
    border: 1px solid rgba($secondary, 0.3);
    border-radius: 12px;
    padding: 1rem 1.25rem;
    margin: 0;
    font-size: 0.875rem;
    line-height: 1.5;
    color: $gray_1;
    text-align: left;
    
    strong {
        color: $secondary;
        font-weight: 600;
    }
    
    @include respond-up(md) {
        font-size: 0.9375rem;
        padding: 1.25rem 1.5rem;
        border-radius: 16px;
    }
}

.buttonContainer {
    max-width: 600px;
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    padding: 0 1rem;
    
    @include respond-up(md) {
        padding: 0;
    }
    
    button {
        width: 100%;
    }
}

// Grid item styles that work with GridPhotos layout
.gridItem {
    position: relative;
    width: 100%;
    
    // Smooth entrance animation
    animation: fadeInUp 0.6s ease-out;
    animation-fill-mode: both;
    
    // Staggered animation delay for each item
    &:nth-child(1) { animation-delay: 0.1s; }
    &:nth-child(2) { animation-delay: 0.2s; }
    &:nth-child(3) { animation-delay: 0.3s; }
    &:nth-child(4) { animation-delay: 0.4s; }
    &:nth-child(5) { animation-delay: 0.5s; }
    &:nth-child(6) { animation-delay: 0.6s; }
    &:nth-child(n+7) { animation-delay: 0.7s; }
}

// Entrance animation
@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

// Special styling for main photo (first item)
.mainPhotoItem {
    position: relative;
    
    &::before {
        content: '';
        position: absolute;
        top: -4px;
        left: -4px;
        right: -4px;
        bottom: -4px;
        background: linear-gradient(
            135deg,
            rgba($secondary, 0.3) 0%,
            rgba($primary, 0.2) 50%,
            rgba($secondary, 0.3) 100%
        );
        border-radius: 20px;
        z-index: -1;
        opacity: 0;
        transition: opacity 0.3s ease;
    }
    
    &:hover::before {
        opacity: 1;
    }
}

// Loading state for grid items
.gridItemLoading {
    opacity: 0.7;
    pointer-events: none;
    
    &::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(
            90deg,
            transparent 0%,
            rgba($primary, 0.1) 50%,
            transparent 100%
        );
        animation: shimmer 2s infinite;
        border-radius: 16px;
        z-index: 1;
    }
}

@keyframes shimmer {
    0% {
        transform: translateX(-100%);
    }
    100% {
        transform: translateX(100%);
    }
} 